// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres" // NOTE: sqlite does not work with NextAuth.js
    url      = env("DATABASE_URL")
}

model Event {
    id          String   @id @default(cuid())
    title       String
    description String   @db.Text
    lat         String
    lng         String
    date        DateTime
    reviewCode  String?

    userId  String?       @unique
    user    User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
    reviews EventReview[]
}

model EventReview {
    id      String   @id @default(cuid())
    rating  Int
    body    String?  @db.Text
    date    DateTime @default(now())
    userId  String
    eventId String

    event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
    user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([userId, eventId], name: "reviewIdentifier")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String        @id @default(cuid())
    name          String?
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Event         Event[]
    EventReview   EventReview[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
